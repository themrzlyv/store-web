name: Deploy Store App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 300

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH key for GitHub connection
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: 157.173.205.31
          username: root
          key: ${{ secrets.STORE_WEB_KEY }}
          port: 22
          script: |
            # SSH into VPS and perform deployment
            echo "Logged into VPS at $HOST"

            cd /var/www/store-web

            # Stop and remove existing containers and volumes
            echo "Stopping and removing old containers..."
            docker-compose down -v --remove-orphans || echo "No containers to stop"

            # Clean up Docker resources
            echo "Cleaning up old images, containers, and volumes..."
            docker system prune -a -f --volumes || echo "Failed to prune Docker resources"

            # Pull latest code from GitHub
            echo "Pulling latest code from GitHub..."
            git pull origin main || echo "Failed to pull from GitHub"

            # Build and start new container with no caching
            echo "Building and starting new container..."
            DATABASE_URL=${{ vars.DATABASE_URL }} \
            NEXT_PUBLIC_API_URL=${{ vars.NEXT_PUBLIC_API_URL }} \
            JWT_SECRET=${{ vars.JWT_SECRET }} \
            UMAMI_SITE_ID=${{ vars.UMAMI_SITE_ID }} \
            UMAMI_API_KEY=${{ vars.UMAMI_API_KEY }} \
            CLOUDINARY_API_KEY=${{ vars.CLOUDINARY_API_KEY }} \
            CLOUDINARY_API_SECRET=${{ vars.CLOUDINARY_API_SECRET }} \
            CLOUDINARY_CLOUD_NAME=${{ vars.CLOUDINARY_CLOUD_NAME }} \
            CLOUDINARY_UPLOAD_PRESET=${{ vars.CLOUDINARY_UPLOAD_PRESET }} \
            docker-compose up -d --build --no-cache || echo "Failed to build and start container"

            echo "Deployment finished"
        env:
          DATABASE_URL: ${{ vars.DATABASE_URL }}
