name: Deploy Store App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Set up SSH agent and add the deploy key
      - name: Set up SSH Agent and Add Key
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-add ~/.ssh/deploy_key

      # Step 2: Add GitHub to known hosts
      - name: Add GitHub to Known Hosts
        run: ssh-keyscan github.com >> ~/.ssh/known_hosts

      # Step 3: Deploy to VPS
      - name: Deploy to VPS
        env:
          HOST: 157.173.205.31
          USERNAME: root
        run: |
          ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
            set -e

            echo "Logging into VPS at $HOST"

            # Navigate to project directory
            cd /var/www/store-web

            # Pull the latest code from the main branch
            echo "Pulling latest code from GitHub"
            git pull origin main
            git fetch origin
            git reset --hard origin/main

            # Stop and remove the existing Docker container
            if [ \$(docker ps -q -f name=store-web) ]; then
              echo "Stopping and removing existing container"
              docker stop store-web
              docker rm store-web
            fi

            # Build a new Docker image locally on the VPS
            echo "Building the Docker image locally"
            docker build -t store-web:latest .

            # Run the updated Docker container
            echo "Starting the updated container"
            docker run -d --name store-web --network app_network -p 3000:3000 \
              -e NEXT_PUBLIC_NODE_ENV=production \
              -e NEXT_PUBLIC_SERVER_URL=https://api.themirzaliyev.store \
              store-web:latest

            echo "Deployment complete!"
          EOF
